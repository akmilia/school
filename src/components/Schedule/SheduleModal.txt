// import React, { useState } from 'react';
// import styles from './AddScheduleModal.module.css';

// interface Teacher {
//     id: number;
//     name: string;
//     surname: string;
//     paternity: string;
// }

// interface Subject {
//     id: number;
//     name: string;
//     description: string;
//     type: string;
// }

// interface ScheduleData {
//     cabinet: string;
//     date_n_time: string;
//     subject: {
//         id: number;
//         name: string;
//         description: string;
//         type: string;
//     }
//     teacher: Teacher;
// }

// interface AddScheduleModalProps {
//     isOpen: boolean;
//     onClose: () => void;
//     onSubmit: (data: ScheduleData) => void;
//     teachers: Teacher[];
//     subjects: Subject[];
// }

// const AddScheduleModal: React.FC<AddScheduleModalProps> = ({ isOpen, onClose, onSubmit, teachers, subjects }) => {
//     const [cabinet, setCabinet] = useState('');
//     const [selectedSubject, setSelectedSubject] = useState<Subject | null>(null);
//     const [subjectDesc, setSubjectDesc] = useState('');
//     const [subjectName, setSubjectName] = useState('');
//     const [subjectType, setSubjectType] = useState('sport');
//     const [dayOfWeek, setDayOfWeek] = useState<string>('Monday');
//     const [time, setTime] = useState<string>('08:00');
//     const [teacher, setTeacher] = useState<Teacher>({ id: 0, name: '', surname: '', paternity: '' });

//     const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

//     const times = [];
//     let minute = 0;

//     for (let hour = 8; hour < 18; hour++) {
//         times.push(`${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`);
//         minute += 55;
//         if (minute >= 60) {
//             hour += Math.floor(minute / 60);
//             minute = minute % 60;
//         }

//         times.push(`${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`);

//         minute -= 15;
//         if (minute >= 60) {
//             hour += Math.floor(minute / 60);
//             minute = minute % 60;
//         }
//     }

//     const convertToDateTime = (dayOfWeek: string, time: string): string => {
//         const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
//         const dayIndex = days.indexOf(dayOfWeek);

//         if (dayIndex === -1) {
//             throw new Error('Invalid day of week');
//         }

//         const today = new Date();
//         const currentDay = today.getDay();
//         const daysToAdd = (dayIndex - currentDay + 7) % 7;

//         const date = new Date(today);
//         date.setDate(today.getDate() + daysToAdd);
//         const [hours, minutes] = time.split(':');
//         date.setHours(parseInt(hours, 10), parseInt(minutes, 10), 0, 0);

//         return date.toISOString();
//     };

//     const handleSubmit = (e: React.FormEvent) => {
//         e.preventDefault();
//         const scheduleData: ScheduleData = {
//             cabinet,
//             date_n_time: convertToDateTime(dayOfWeek, time),
//             subject: selectedSubject,
//             teacher,
//         };
//         onSubmit(scheduleData);
//         onClose();
//     };

//     if (!isOpen) return null;

//     return (
//         <div className={styles.modalOverlay}>
//             <div className={styles.modal}>
//                 <h2>Добавить занятие</h2>
//                 <form onSubmit={handleSubmit}>
//                     <div className={styles.formGroup}>
//                         <label>Кабинет:</label>
//                         <input
//                             type="text"
//                             value={cabinet}
//                             onChange={(e) => setCabinet(e.target.value)}
//                             required
//                         />
//                     </div>
//                     <div className={styles.formGroup}>
//                         <label>Предмет:</label>
//                         <select
//                             value={selectedSubject?.id || ''}
//                             onChange={(e) => {
//                                 const subjectId = parseInt(e.target.value);
//                                 const subject = subjects.find(s => s.id === subjectId);
//                                 setSelectedSubject(subject || null);
//                             }}
//                             required
//                         >
//                             <option value="">Выберите предмет...</option>
//                             {subjects.map((subject) => (
//                                 <option key={subject.id} value={subject.id}>
//                                     {subject.name} ({subject.type})
//                                 </option>
//                             ))}
//                         </select>
//                     </div>
//                     {/* <div className={styles.formGroup}>
//                         <label>Тип предмета:</label>
//                         <select
//                             value={subjectType}
//                             onChange={(e) => setSubjectType(e.target.value)}
//                             required
//                         >
//                             <option value="sport">Спорт</option>
//                             <option value="art">Искусство</option>
//                             <option value="free">Бесплатно</option>
//                             <option value="paid">Платно</option>
//                         </select>
//                     </div> */}
//                     <div className={styles.formGroup}>
//                         <label>День недели:</label>
//                         <select
//                             value={dayOfWeek}
//                             onChange={(e) => setDayOfWeek(e.target.value)}
//                             required
//                         >
//                             {daysOfWeek.map((day, index) => (
//                                 <option key={index} value={day}>
//                                     {day}
//                                 </option>
//                             ))}
//                         </select>
//                     </div>
//                     <div className={styles.formGroup}>
//                         <label>Время:</label>
//                         <select
//                             value={time}
//                             onChange={(e) => setTime(e.target.value)}
//                             required
//                         >
//                             {times.map((t, index) => (
//                                 <option key={index} value={t}>
//                                     {t}
//                                 </option>
//                             ))}
//                         </select>
//                     </div>
//                     <div className={styles.formGroup}>
//                         <label>Учитель:</label>
//                         <select
//                             value={teacher.id}
//                             onChange={(e) => {
//                                 const selectedTeacher = teachers.find(
//                                     (t) => t.id === parseInt(e.target.value)
//                                 );
//                                 if (selectedTeacher) setTeacher(selectedTeacher);
//                             }}
//                             required
//                         >   
//                             <option value="">
//                                 Выберите учителя...
//                             </option>
//                             {teachers.map((t) => (
//                                 <option key={t.id} value={t.id}>
//                                     {`${t.name} ${t.surname} ${t.paternity}`}
//                                 </option>
//                             ))}
//                         </select>
//                     </div>
//                     <div className={styles.buttons}>
//                         <button type="button" onClick={onClose}>Отмена</button>
//                         <button type="submit">Добавить</button>
//                     </div>
//                 </form>
//             </div>
//         </div>
//     );
// };

// export default AddScheduleModal;